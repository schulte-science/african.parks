dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup()
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup()
View(trnl_format)
View(rv$trnl)
View(vert)
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId))
unique(trnl_format$Replicate)
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId)) |>
dplyr::relocate(Barcode, .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::select(TestId:`# species`, by = "ESVId")) |>
dplyr::left_join(meta |> dplyr::select(Barcode, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host)) |>
mutate(
base_barcode = str_remove(SampleId, "\\.[12]$"),
suffix = str_extract(SampleId, "\\.[12]$")
) %>%
group_by(base_barcode) %>%
filter(!(suffix == ".1" & any(suffix == ".2"))) %>%
ungroup() %>%
select(-base_barcode, -suffix)
length(unique(trnl_format$Barcode))
length(unique(trnl_format$SampleId))
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) %>%
dplyr::filter(!(Replicate == ".1" & any(Replicate == ".2"))) %>%
dplyr::ungroup() %>%
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::select(TestId:`# species`, by = "ESVId")) |>
dplyr::left_join(meta |> dplyr::select(Barcode, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host))
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) %>%
dplyr::filter(!(Replicate == ".1" & any(Replicate == ".2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::select(TestId:`# species`, by = "ESVId")) |>
dplyr::left_join(meta |> dplyr::select(Barcode, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host))
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == ".1" & any(Replicate == ".2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::select(TestId:`# species`, by = "ESVId")) |>
dplyr::left_join(meta |> dplyr::select(Barcode, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host))
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == ".1" & any(Replicate == ".2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::select(TestId:`# species`, by = "ESVId")) |>
dplyr::left_join(vert |> dplyr::select(Barcode, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host), by = "Barcode")
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == ".1" & any(Replicate == ".2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId)
View(vert)
View(trnl)
View(trnl_format)
length(unique(trnl_format$Barcode))
length(unique(trnl_format$SampleId))
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == "1" & any(Replicate == "2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::select(TestId:`# species`), by = "ESVId") |>
dplyr::left_join(vert |> dplyr::select(Barcode, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host), by = "Barcode")
length(unique(trnl_format$Barcode))
length(unique(trnl_format$SampleId))
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == "1" & any(Replicate == "2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::distinct(ESVId) |> dplyr::select(TestId:`# species`), by = "ESVId") |>
dplyr::left_join(vert |> dplyr::distinct(Barcode) |> dplyr::select(Barcode, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host), by = "Barcode")
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == "1" & any(Replicate == "2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::distinct(ESVId) |> dplyr::select(TestId:`# species`), by = "ESVId") |>
dplyr::left_join(vert |> dplyr::distinct(Barcode) |> dplyr::select(Barcode, name_of_park, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host), by = "Barcode")
trnl_format <- trnl |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == "1" & any(Replicate == "2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::distinct(ESVId, .keep_all = TRUE) |> dplyr::select(TestId:`# species`), by = "ESVId") |>
dplyr::left_join(vert |> dplyr::distinct(Barcode, .keep_all = TRUE) |> dplyr::select(Barcode, name_of_park, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host), by = "Barcode")
overview <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "Overview")
View(overview)
write.csv(overview, "Overview_20250519.csv", row.names = F)
overview <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "Overview") |>
dplyr::select(DateRun, DateFirstAnalyzed, JVRunId, JVBatchId, Platform, SampleType, Amplicon) |>
dplyr::filter(Amplicon %in% c("12SVert", "trnL"))
write.csv(overview, "Overview_20250519.csv", row.names = F)
View(overview)
meta <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "Metadata_20250519")
write.csv(meta, "Metadata_20250519.csv", row.names = F)
vert <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "12S_Summary_20250519")
write.csv(vert, "12S_Summary_20250519.csv", row.names = F)
trnl <- read.csv("~/Jonah Ventures Dropbox/JonahClients/MeyerJordana/MeyerJordana_Analysis/RunData/20250519/JVB3872-trnL-read-data_20250519.csv", check.names = FALSE) |>
dplyr::select(ESVId, matches("S[0-9]")) |>
tidyr::pivot_longer(-ESVId, names_to = "SampleId", values_to = "Reads") |>
dplyr::filter(Reads > 0) |>
dplyr::group_by(SampleId) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::filter(rel >= 0.01) |>
dplyr::mutate(rel = Reads / sum(Reads)) |>
dplyr::ungroup() |>
dplyr::mutate(Barcode = gsub("\\..*", "", SampleId),
Replicate = gsub(".*\\.", "", SampleId)) |>
dplyr::group_by(Barcode) |>
dplyr::filter(!(Replicate == "1" & any(Replicate == "2"))) |>
dplyr::ungroup() |>
dplyr::relocate(c(Barcode, Replicate), .before = SampleId) |>
dplyr::left_join(trnl |> dplyr::distinct(ESVId, .keep_all = TRUE) |> dplyr::select(TestId:`# species`), by = "ESVId") |>
dplyr::left_join(vert |> dplyr::distinct(Barcode, .keep_all = TRUE) |> dplyr::select(Barcode, name_of_park, DNA_Species_Host, DNA_Common_Host, DNA_Diet_Host), by = "Barcode")
write.csv(trnl, "trnL_Summary_20250519.csv", row.names = F)
golem:::run_dev()
getwd()
golem:::run_dev()
length(unique(overview$JVRunId))
golem:::run_dev()
overview <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "Overview") |>
dplyr::select(DateRun, DateFirstAnalyzed, JVRunId, JVBatchId, Platform, SampleType, Amplicon, Samples) |>
dplyr::filter(Amplicon %in% c("12SVert", "trnL"))
write.csv(overview, "Overview_20250519.csv", row.names = F)
golem:::run_dev()
View(overview)
rv$runs <- overview
rv$runs |>
dplyr::group_by(Amplicon, DateRun) |>
dplyr::summarize(Samples = sum(Samples)) |>
dplyr::ungroup() |>
dplyr::group_by(Amplicon) |>
dplyr::mutate(Samples = cumsum(Samples))
rv$runs = read.csv("Overview_20250519.csv", na.strings = c("", "NA")) |>
dplyr::mutate(DateRun = as.Date(DateRun, format = "%m/%d/%Y"))
View(rv$runs)
rv$runs = read.csv("Overview_20250519.csv", na.strings = c("", "NA"))
as.Date(rv$runs$DateRun)
as.Date(rv$runs$DateRun, format = "%m/%d/%Y")
rv$runs = read.csv("Overview_20250519.csv", na.strings = c("", "NA")) |>
dplyr::mutate(DateRun = as.Date(DateRun))
golem:::run_dev()
golem:::run_dev()
View(vert)
vert <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "12S_Summary_20250519")
View(vert)
View(vert)
colnames(vert)
vert <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "12S_Summary_20250519", col_types = "c") |>
dplyr::mutate(Reads = as.numeric(Reads)) |>
dplyr::group_by(Barcode) %>%
dplyr::mutate(Reads_Prey = sum(Reads[!is.na(DNA_Species_Prey)], na.rm = TRUE)) %>%
dplyr::arrange(DNA_Species_Type, -Reads) %>%
dplyr::ungroup() %>%
dplyr::mutate(RRA_Prey = ifelse(!is.na(DNA_Species_Prey), round(Reads / Reads_Prey * 100,2), NA))
vert <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "12S_Summary_20250519", col_types = "c") |>
dplyr::mutate(Reads = as.numeric(Reads)) |>
dplyr::group_by(Barcode) |>
dplyr::mutate(Reads_Prey = sum(Reads[!is.na(DNA_Species_Prey)], na.rm = TRUE)) |>
dplyr::arrange(DNA_Species_Type, -Reads) |>
dplyr::ungroup() |>
dplyr::mutate(RRA_Prey = ifelse(!is.na(DNA_Species_Prey), round(Reads / Reads_Prey * 100,2), NA))
View(vert)
vert <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1VBkkzWRVTb5GcTZC1alg5mINGZfB75N0NJMrBLehkWo/edit?usp=sharing", sheet = "12S_Summary_20250519", col_types = "c") |>
dplyr::mutate(Reads = as.numeric(Reads)) |>
dplyr::group_by(Barcode) |>
dplyr::mutate(Reads_Prey = sum(Reads[!is.na(DNA_Species_Prey)], na.rm = TRUE)) |>
dplyr::ungroup() |>
dplyr::mutate(RRA_Prey = ifelse(!is.na(DNA_Species_Prey), round(Reads / Reads_Prey * 100,2), NA))
View(vert)
write.csv(vert, "12S_Summary_20250519.csv", row.names = F)
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
outlier_high <- x > (qnt[2] + 1.5 * iqr)
# Get function to flag NMDS outliers
flag_outliers <- function(x) {
qnt <- quantile(x, probs = c(0.25, 0.75), na.rm = TRUE)
iqr <- IQR(x, na.rm = TRUE)
outlier_low <- x < (qnt[1] - 1.5 * iqr)
outlier_high <- x > (qnt[2] + 1.5 * iqr)
outlier_low | outlier_high
}
# Get pairwise PERMANOVA function
pairwise_permanova <- function(mat, group_vector, method = "bray", permutations = 999) {
group_vector <- as.factor(group_vector)
lvls <- levels(group_vector)
combs <- combn(lvls, 2, simplify = FALSE)
results <- lapply(combs, function(pair) {
inds <- which(group_vector %in% pair)
sub_mat <- mat[inds, ]
sub_group <- droplevels(group_vector[inds])
ad <- vegan::adonis2(sub_mat ~ sub_group, permutations = permutations, method = method)
data.frame(
Group1 = pair[1],
Group2 = pair[2],
Df = ad[1, "Df"],
R2 = round(ad[1, "R2"], 3),
F = round(ad[1, "F"], 3),
p = round(ad[1, "Pr(>F)"], 3),
stringsAsFactors = FALSE
)
})
results_df <- do.call(rbind, results)
results_df$p_Bonferroni <- round(p.adjust(results_df$p, method = "bonferroni"), 3)
results_df$p_Holm <- round(p.adjust(results_df$p, method = "holm"), 3)
results_df$p_BH <- round(p.adjust(results_df$p, method = "BH"), 3)
results_df
}
input$filter_park == "iona"
input$filter_park = "iona"
input$filter_species = NULL
df <- rv$trnl
# Apply filters only if something is selected
if (!is.null(input$filter_park) && length(input$filter_park) > 0) {
df <- df[df$name_of_park %in% input$filter_park, ]
}
if (!is.null(input$filter_species) && length(input$filter_species) > 0) {
df <- df[df$DNA_Common_Host %in% input$filter_species, ]
}
df
View(df)
# Create tmp_wide
if (!is.null(input$filter_species)) {
tmp_wide <- df |>
dplyr::filter(name_of_park %in% input$filter_park,
DNA_Common_Host %in% input$filter_species) |>
tidyr::pivot_wider(names_from = ESVId, id_cols = Barcode, values_from = Reads) |>
tibble::column_to_rownames(var = "Barcode") |>
dplyr::mutate(dplyr::across(dplyr::everything(), ~tidyr::replace_na(., 0))) |>
(\(x) x[rowSums(x) > 0, colSums(x) > 0])()
} else {
tmp_wide <- df |>
dplyr::filter(name_of_park %in% input$filter_park) |>
tidyr::pivot_wider(names_from = ESVId, id_cols = Barcode, values_from = Reads) |>
tibble::column_to_rownames(var = "Barcode") |>
dplyr::mutate(dplyr::across(dplyr::everything(), ~tidyr::replace_na(., 0))) |>
(\(x) x[rowSums(x) > 0, colSums(x) > 0])()
}
View(tmp_wide)
# NMDS ordination
set.seed(123)
tmp_nmds <- vegan::metaMDS(tmp_wide, trymax = 1)
# Site scores
tmp_sites <- vegan::scores(tmp_nmds)$sites |>
as.data.frame() |>
tibble::rownames_to_column(var = "Barcode") |>
dplyr::mutate(outlier_NMDS1 = flag_outliers(NMDS1),
outlier_NMDS2 = flag_outliers(NMDS2)) |>
dplyr::filter(!(outlier_NMDS1 | outlier_NMDS2)) |>
dplyr::left_join(rv$meta[,c("barcode_id", "species_id_dna_common", "name_of_park")], by = c("Barcode" = "barcode_id"))
xrange <- range(tmp_sites$NMDS1, na.rm = TRUE)
yrange <- range(tmp_sites$NMDS2, na.rm = TRUE)
tmp_spp <- vegan::scores(tmp_nmds, "species") |>
as.data.frame() |>
tibble::rownames_to_column(var = "ESVId") |>
dplyr::filter(dplyr::between(NMDS1, xrange[1], xrange[2]),
dplyr::between(NMDS2, yrange[1], yrange[2])) |>
dplyr::left_join(trnl_filtered()[,c("ESVId", "Class", "Order", "Family", "Genus", "Species")] |> dplyr::distinct(ESVId, .keep_all = T)) |>
dplyr::mutate(Species = ifelse(grepl("\\.|[0-9]", Species), NA, Species)) |>
dplyr::mutate(Consensus = paste(Class, Order, Family, Genus, Species, sep = ";"),
Consensus = gsub("\\;NA.*|\\;\\;.*", "", Consensus),
Consensus = stringr::str_remove(Consensus, ";$"),
Consensus = sub(".*;(.*)$", "\\1", Consensus),
Consensus = ifelse(Consensus %in% c("NA", ""), NA, Consensus)) |>
dplyr::mutate(
quadrant = dplyr::case_when(
NMDS1 >= 0 & NMDS2 >= 0 ~ "Q1",
NMDS1 <  0 & NMDS2 >= 0 ~ "Q2",
NMDS1 <  0 & NMDS2 <  0 ~ "Q3",
NMDS1 >= 0 & NMDS2 <  0 ~ "Q4"
),
dist = sqrt(NMDS1^2 + NMDS2^2)
) |>
dplyr::group_by(quadrant) |>
dplyr::slice_max(order_by = dist, n = 5, with_ties = FALSE)
tmp_spp <- vegan::scores(tmp_nmds, "species") |>
as.data.frame() |>
tibble::rownames_to_column(var = "ESVId") |>
dplyr::filter(dplyr::between(NMDS1, xrange[1], xrange[2]),
dplyr::between(NMDS2, yrange[1], yrange[2])) |>
dplyr::left_join(df[,c("ESVId", "Class", "Order", "Family", "Genus", "Species")] |> dplyr::distinct(ESVId, .keep_all = T)) |>
dplyr::mutate(Species = ifelse(grepl("\\.|[0-9]", Species), NA, Species)) |>
dplyr::mutate(Consensus = paste(Class, Order, Family, Genus, Species, sep = ";"),
Consensus = gsub("\\;NA.*|\\;\\;.*", "", Consensus),
Consensus = stringr::str_remove(Consensus, ";$"),
Consensus = sub(".*;(.*)$", "\\1", Consensus),
Consensus = ifelse(Consensus %in% c("NA", ""), NA, Consensus)) |>
dplyr::mutate(
quadrant = dplyr::case_when(
NMDS1 >= 0 & NMDS2 >= 0 ~ "Q1",
NMDS1 <  0 & NMDS2 >= 0 ~ "Q2",
NMDS1 <  0 & NMDS2 <  0 ~ "Q3",
NMDS1 >= 0 & NMDS2 <  0 ~ "Q4"
),
dist = sqrt(NMDS1^2 + NMDS2^2)
) |>
dplyr::group_by(quadrant) |>
dplyr::slice_max(order_by = dist, n = 5, with_ties = FALSE)
# Run PERMANOVA
if(length(unique(tmp_sites$species_id_dna_common)) > 1) {
permanova <- vegan::adonis2(tmp_wide ~ rv$meta$species_id_dna_common[match(rownames(tmp_wide), rv$meta$barcode_id)],
permutations = 99, method = "bray")
perm_stats <- permanova[1, ]
# perm_summary <- sprintf(
#   "PERMANOVA results (99 permutations):\nDF = %d\nSST = %.3f\nR² = %.3f\nF = %.3f\np = %.3f",
#   perm_stats$Df, perm_stats$SumOfSqs, perm_stats$R2, perm_stats$F, perm_stats$`Pr(>F)`
# )
# permanova_text(perm_summary)
# Run pairwise PERMANOVA
group_vector <- rv$meta$species_id_dna_common[match(rownames(tmp_wide), rv$meta$barcode_id)]
pairwise_df <- rbind(
data.frame(Group1 = "All", Group2 = "All", Df = perm_stats$Df, R2 = round(perm_stats$R2, 3), `F` = round(perm_stats$`F`, 3), p = round(perm_stats$`Pr(>F)`, 3), p_Bonferroni = "", p_Holm = "", p_BH = ""),
pairwise_permanova(tmp_wide, group_vector) |>
dplyr::filter(!is.na(p)) |>
dplyr::arrange(-p) |>
dplyr::select(Group1, Group2, Df, R2, `F`, p, p_Bonferroni, p_Holm, p_BH)
)
permanova_table(pairwise_df)
}
ggplot2::ggplot(tmp_sites, ggplot2::aes(x = NMDS1, y = NMDS2, fill = species_id_dna_common)) +
ggiraph::geom_point_interactive(
aes(tooltip = paste0("Sample ID: ", Barcode, "\nPark: ", name_of_park, "\nConsumer: ", species_id_dna_common)),
color = "black", size = 3, shape = 21, alpha = 0.5
) +
ggrepel::geom_text_repel(data = tmp_spp,
ggplot2::aes(x = NMDS1, y = NMDS2, label = Consensus),
color = "black", size = 3,
inherit.aes = FALSE) +
ggplot2::labs(fill = "DNA-Inferred Host") +
ggplot2::theme_bw()
# Plot
tmp_p <- ggplot2::ggplot(tmp_sites, ggplot2::aes(x = NMDS1, y = NMDS2, fill = species_id_dna_common)) +
ggiraph::geom_point_interactive(
ggplot2::aes(tooltip = paste0("Sample ID: ", Barcode, "\nPark: ", name_of_park, "\nConsumer: ", species_id_dna_common)),
color = "black", size = 3, shape = 21, alpha = 0.5
) +
ggrepel::geom_text_repel(data = tmp_spp,
ggplot2::aes(x = NMDS1, y = NMDS2, label = Consensus),
color = "black", size = 3,
inherit.aes = FALSE) +
ggplot2::labs(fill = "DNA-Inferred Host") +
ggplot2::theme_bw()
tmp_p
golem:::run_dev()
tmp_p
golem:::run_dev()
View(rv$trnl)
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
View(rv$trnl)
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
golem:::run_dev()
setwd("~/Jonah Ventures Dropbox/Nick Schulte/Development_AfricanParks/african.parks")
golem:::run_dev()
